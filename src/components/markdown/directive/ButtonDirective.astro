---
import Svgicons from '@/components/svgicons.astro';
import {extname} from 'path'

export interface Props {
  label: string;
  link: string;
  icon: string;
}

const { label, link, icon=null } = Astro.props as Props;
const external = link.startsWith('http')
let used_icon = icon

if(icon == null){
  if(external){
    used_icon = "new"
  }else if([".zip",".hex"].includes(extname(link))){
    used_icon = "download"
  }
}
---
<div class="container">
  <a href={link} class={`link ${external?"external":""}`} target={external?"_blank":"_self"}>
    <span class="button text">{label}</span>
    {used_icon&&
      <span class="icon"><Svgicons filename={used_icon}/></span>
    }
  </a>
</div>

<style>
.container{
  width:100%;
  display:flex;
  flex-direction: column;
  align-items:center;
}
a{
  text-decoration: none;
  border-style: solid;
  border-width: 1px;
  border-color: var(--front-blue);
  background-color: rgba(138, 115, 85, 0.05);
  padding: 0.75rem 1.25rem;
  border-radius: 8px;
  margin: 0.5rem 0;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.75rem;
  transition: all 0.3s ease;
  font-weight: 500;
  min-width: 150px;
}
a:hover{
  background-color: var(--front-blue);
  transform: translateY(-2px);
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
}
.button.text{
  color: var(--content-color);
  font-size: 0.95rem;
}
a:hover .button.text {
  color: #fff;
}
.icon{
  height: 1rem;
  display: flex;
  align-items: center;
}
.icon :global(svg){
  fill: var(--content-color);
  width: 1rem;
  height: 1rem;
  transition: fill 0.3s ease;
}
a:hover .icon :global(svg) {
  fill: #fff;
}
</style>
